pragma solidity >=0.4.22 <0.6.0;

contract HospitalInformation {
    
    struct Hospital {
        uint256 id;
        bytes32 name;
        bytes32 regNo;
        bytes32 hospitalAddress;
        bytes32 hashid;
        int duplicateno;
        int noOfBeds;
        int hospitalType;
        
    }
    
    mapping(uint256=>Hospital) hospitals;

    function addHospital(uint256 id,bytes32 name,bytes32 regNo,  
                        bytes32 hospitalAddress,  bytes32 hashid, 
                        int duplicateno,
                        int noOfBeds, int hospitalType) public {
        
        hospitals[id].name = name;
        hospitals[id].regNo = regNo;
        hospitals[id].hospitalAddress = hospitalAddress;
        hospitals[id].hashid = hashid;
        hospitals[id].duplicateno = duplicateno;
        hospitals[id].noOfBeds = noOfBeds;
        hospitals[id].hospitalType = hospitalType;
    }
    
    function getHospitalbyrecordid(uint256 id) view public returns (bytes32 ,bytes32 ,  bytes32,  bytes32 , int , int , int ) {
        
        return (hospitals[id].name,
                hospitals[id].regNo, hospitals[id].hospitalAddress, hospitals[id].hashid, 
                hospitals[id].duplicateno, hospitals[id].noOfBeds, hospitals[id].hospitalType);
    }
}